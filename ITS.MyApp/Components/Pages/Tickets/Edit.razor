@page "/Tickets/edit/{id:int}"
@inject TicketService Data
@inject NavigationManager Nav

<h3>Edit ticket</h3>

<EditForm Model="EditTicket"
          FormName="EditTicket"
          OnSubmit="OnSave">

    <div class="form-group">
        <label for="txtDeviceId">DeviceId:</label>
        <InputNumber @bind-Value="EditTicket.DeviceId"
                   class="form-control"
                   id="txtDeviceId" />
    </div>

    <div class="form-group">
        <label for="txtStartTime">StartTime:</label>
        <InputDate @bind-Value="EditTicket.StartTime"
                   class="form-control"
                   id="txtStartTime" />
    </div>

    <div class="form-group">
        <label for="txtEndTime">EndTime:</label>
        <InputDate @bind-Value="EditTicket.EndTime"
                   class="form-control"
                   id="txtEndTime" />
    </div>

    <div class="form-group">
        <label for="txtTicketstate">Ticketstate:</label>
        <InputText @bind-Value="EditTicket.Ticketstate"
                   class="form-control"
                   id="txtTicketstate" />
    </div>

    <div class="form-group">
        <label for="txtDeviceState">DeviceState:</label>
        <InputText @bind-Value="EditTicket.DeviceState"
                   class="form-control"
                   id="txtDeviceState" />
    </div>

    <div class="form-group">
        <label for="txtDescription">Description:</label>
        <InputText @bind-Value="EditTicket.Description"
                   class="form-control"
                   id="txtDescription" />
    </div>

    <div class="form-group">
        <label for="txtTitle">Title:</label>
        <InputText @bind-Value="EditTicket.Title"
                   class="form-control"
                   id="txtTitle" />
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Update</button>
    <a class="btn btn-secondary" href="/">Cancel</a>
    <hr />
</EditForm>


@code {

    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Ticket EditTicket { get; set; } = new();

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            EditTicket = await Data.GetTicketAsync(Id);
        }
    }

    private async Task OnSave()
    {
        EditTicket.TicketId = Id;
        await Data.UpdateTicketAsync(EditTicket);
        Nav.NavigateTo("/");
    }

}
